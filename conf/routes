# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET    		 	/													controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Geo Features
#POST			/geo												controllers.Features.createGeoFeature()
#PUT			/geo												controllers.Features.updateGeoFeature()
#DELETE			/geo												controllers.Features.deleteGeoFeature(id:String, user_id:String)
#GET			/geo												controllers.Features.fetchAllGeoFeautres()
#GET			/search/:hashTag									controllers.HashTagManager.fetchGeoFeaturesByTag(hashTag:String)
#GET			/user/:userID										controllers.Users.fetchGeoFeaturesByUser(userID:String)
#GET			/geo/:id											controllers.Features.featureById(id:String)


#GET			/geo/box/											controllers.Features.geoFeaturesInBoundingBox(lng1:String, lat1:String, lng2:String, lat2:String)
#GET			/geo/radius/:lng/:lat/:distanceInMeters				controllers.Features.getPOIsInRadius(lng:String, lat:String, distanceInMeters:String)
#GET			/geo/recent/:lng/:lat								controllers.Features.geoMostRecentFeatures(lng:String, lat:String)


# Geo Content
#GET			/image/:id											controllers.Features.showImage(id:String)
#GET			/content/:id										controllers.Contents.contentOfFeature(id:String)
#GET			/instagram/:id										controllers.Contents.contentOfInstaPOI(id:String)



##### Mapping Sessions ######
# Add Session
#POST     		/session/new          						    	controllers.Sessions.create()
#																	create a new session with admin_id

#POST     		/session                 						 	controllers.Sessions.save()
#GET			/session/:id										controllers.Sessions.fetchProjectById(id:String)
#DELETE			/session/:id/:user_id								controllers.Sessions.delete(id:String, user_id:String)

#GET			/session/:listing/:group_id							return a listing of groups that have been MAPPA associated

##### External Content
#GET			/external											controllers.InstagramParser.getPOIs(lon1:String, lat1:String, lon2:String, lat2:String)





#####   Test calls for SQL conversion #######

GET		/userlist		controllers.TestController.allusers()
GET		/taglist		controllers.TestController.alltags()
POST	/adduser		controllers.TestController.addUser()
POST	/addfeature		controllers.TestController.addUserFeature()
POST	/userfeatures	controllers.TestController.getUserFeatures()


#### image post to S3 ####
GET     /image                    	controllers.S3Controller.index()
POST    /image                      controllers.S3Controller.upload()
